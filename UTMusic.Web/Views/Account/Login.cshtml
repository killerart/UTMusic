@model UTMusic.Web.Models.LoginModel
@{
	ViewBag.Title = "Login";
}

<div class="container-md px-md-5">
	<div id="login-row" class="row justify-content-center align-items-center my-5">
		<div id="login-column" class="col-md-6">
			<div id="login-box" class="col-md-12">
				@using (Html.BeginForm("Login", "Account", FormMethod.Post, new { id = "login-form", @class = "form" }))
				{
					@Html.AntiForgeryToken()
					<h3 class="text-center">Login</h3>
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						<label for="username">E-Mail:</label><br>
						@*<input type="email" name="EMail" id="email" class="form-control"
							data-kwimpalastatus="alive" data-kwimpalaid="1581673479871-3" required>*@
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "true", @type = "email" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<label for="password">Password:</label><br>
						@*<input type="password" name="Password" id="password" class="form-control"
							data-kwimpalastatus="alive" data-kwimpalaid="1581673479871-4" required>*@
						@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "true", @type = "password" } })
						@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<div class="col-md-10">
							<div class="checkbox">
								@Html.LabelFor(model => model.Remember, htmlAttributes: new { @class = "control-label mr-1" })
								@Html.EditorFor(model => model.Remember)
								@Html.ValidationMessageFor(model => model.Remember, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="form-group">
						<input type="submit" name="submit" class="btn btn-light" value="Log In">
					</div>
				}
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}